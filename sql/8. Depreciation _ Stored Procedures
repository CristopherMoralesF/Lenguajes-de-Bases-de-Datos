CREATE OR REPLACE VIEW DEPRECIATION_SUBLEDGER AS
    SELECT 
        -- Table Fields
        A.DESCRIPCION_ACTIVO,
        A.VALOR_ADQUISICION,
        A.FECHA_ADQUISICION,
        A.PERIODOS_DEPRECIADOS,
        C.DESCRIPCION_CLASE,
        C.VIDA_UTIL,
        A.ID_CLASE,
        -- Calculated Fields
        CASE
            WHEN A.PERIODOS_DEPRECIADOS <= (C.VIDA_UTIL*12) THEN
                ROUND(A.VALOR_ADQUISICION / (C.VIDA_UTIL * 12),2)
            ELSE
                0
        END AS DEPRECIACION_MENSUAL,
        
        ROUND((A.VALOR_ADQUISICION / (C.VIDA_UTIL * 12))*A.PERIODOS_DEPRECIADOS,2) AS DEPRECIACION_ACUMULADA
    FROM ACTIVO A
    INNER JOIN CLASE C ON C.ID_CLASE = A.ID_CLASE;
    
SELECT * FROM DEPRECIATION_SUBLEDGER WHERE ID_CLASE = 1;

CREATE OR REPLACE PACKAGE DEPRECIATION
IS

    PROCEDURE RUN_DEPRECIATION (
        IN_ID_CLASE         IN ACTIVO.ID_CLASE%TYPE,
        IN_JE_DESCRIPCION   IN ASIENTO.DESCRIPCIÓN%TYPE,
        OUT_RESULT          OUT SYS_REFCURSOR,
        OUT_JOURNAL_ID      OUT VARCHAR2
    );

END;

CREATE OR REPLACE PACKAGE BODY DEPRECIATION
IS
    
    PROCEDURE RUN_DEPRECIATION (
        IN_ID_CLASE         IN ACTIVO.ID_CLASE%TYPE,
        IN_JE_DESCRIPCION   IN ASIENTO.DESCRIPCIÓN%TYPE,
        OUT_RESULT          OUT SYS_REFCURSOR,
        OUT_JOURNAL_ID      OUT VARCHAR2
    )
    AS 
        VAR_DEPRECIACION_TOTAL      NUMBER(20,2);
        VAR_EXPENSE_ACCOUNT         CUENTA_CONTABLE.ID_CUENTA%TYPE; 
        VAR_DEPRECIATION_ACCOUNT    CUENTA_CONTABLE.ID_CUENTA%TYPE;
        VAR_CLASS_NAME              CLASE.DESCRIPCION_CLASE%TYPE;
        VAR_FINAL_DEPRECIATION      SYS_REFCURSOR;
    BEGIN
    
        -- Complete the information necesary to perform the journals
        SELECT SUM(DEPRECIACION_MENSUAL) INTO VAR_DEPRECIACION_TOTAL FROM DEPRECIATION_SUBLEDGER WHERE ID_CLASE = IN_ID_CLASE;
        SELECT ID_CUENTA INTO VAR_EXPENSE_ACCOUNT FROM CLASE_CUENTA WHERE ID_CLASE = IN_ID_CLASE AND ID_CATEGORIA_CUENTA = 5;
        SELECT ID_CUENTA INTO VAR_DEPRECIATION_ACCOUNT FROM CLASE_CUENTA WHERE ID_CLASE = IN_ID_CLASE AND ID_CATEGORIA_CUENTA = 6;
        SELECT DESCRIPCION_CLASE INTO VAR_CLASS_NAME FROM CLASE WHERE ID_CLASE = IN_ID_CLASE;
        
        -- Create journal
        INSERT INTO ASIENTO (ID_CLASE,FECHA,DESCRIPCIÓN) VALUES (IN_ID_CLASE,SYSDATE,IN_JE_DESCRIPCION) RETURNING ID_ASIENTO INTO OUT_JOURNAL_ID;
        
        -- Create Journal body
        INSERT INTO ASIENTO_LINEA (ID_ASIENTO, ID_CUENTA_CONTABLE,DESCRIPCION_LINEA,DEBITO,CREDITO) VALUES (OUT_JOURNAL_ID,VAR_EXPENSE_ACCOUNT,IN_JE_DESCRIPCION,VAR_DEPRECIACION_TOTAL,0);
        INSERT INTO ASIENTO_LINEA (ID_ASIENTO, ID_CUENTA_CONTABLE,DESCRIPCION_LINEA,DEBITO,CREDITO) VALUES (OUT_JOURNAL_ID,VAR_DEPRECIATION_ACCOUNT,IN_JE_DESCRIPCION,0,VAR_DEPRECIACION_TOTAL);
        
        -- Update Account Balance
        -- Debit Account
        UPDATE CUENTA_CONTABLE SET TOTAL_DEBITOS = TOTAL_DEBITOS + VAR_DEPRECIACION_TOTAL WHERE ID_CUENTA = VAR_EXPENSE_ACCOUNT;
        UPDATE CUENTA_CONTABLE SET BALANCE = TOTAL_DEBITOS - TOTAL_CREDITOS  WHERE ID_CUENTA = VAR_EXPENSE_ACCOUNT;   
        
         -- Credit Account
        UPDATE CUENTA_CONTABLE SET TOTAL_CREDITOS = TOTAL_CREDITOS + VAR_DEPRECIACION_TOTAL WHERE ID_CUENTA = VAR_DEPRECIATION_ACCOUNT;
        UPDATE CUENTA_CONTABLE SET BALANCE = TOTAL_DEBITOS - TOTAL_CREDITOS  WHERE ID_CUENTA = VAR_DEPRECIATION_ACCOUNT;
        
        -- Update depreciation periods
        UPDATE 
            ACTIVO
        SET
            PERIODOS_DEPRECIADOS = PERIODOS_DEPRECIADOS + 1
        WHERE 
            ID_CLASE = IN_ID_CLASE;
            
        -- Generate depreciation subledger with the information up to date. 
        OPEN VAR_FINAL_DEPRECIATION FOR SELECT * FROM DEPRECIATION_SUBLEDGER WHERE ID_CLASE = IN_ID_CLASE;
        OUT_RESULT := VAR_FINAL_DEPRECIATION;
    
    END;

END;

-- Comprobación store procedure run_depreciation
DECLARE
    IN_ID_CLASE         ACTIVO.ID_CLASE%TYPE;
    OUT_RESULT          SYS_REFCURSOR;
    IN_JE_DESCRIPCION   ASIENTO.DESCRIPCIÓN%TYPE;
    OUT_RESULT_TEXT     VARCHAR2(255);
BEGIN

    IN_ID_CLASE := 2;
    IN_JE_DESCRIPCION := 'Depreciacion Vehiculos Diciembre';

    DEPRECIATION.RUN_DEPRECIATION(
        IN_ID_CLASE,
        IN_JE_DESCRIPCION,
        OUT_RESULT,
        OUT_RESULT_TEXT     
    );
    
    DBMS_OUTPUT.PUT_LINE(OUT_RESULT_TEXT);
    DBMS_SQL.RETURN_RESULT(OUT_RESULT);

END;


SELECT * FROM ASIENTO WHERE ID_ASIENTO = 7;

SELECT * FROM ASIENTO_LINEA WHERE ID_ASIENTO = 7;

SELECT * FROM CUENTA_CONTABLE;

COMMIT;

SELECT * FROM ASIENTO WHERE ID_ASIENTO = 8;

UPDATE ASIENTO SET DESCRIPCIÓN = 'Depreciación Edificios Diciembre' WHERE ID_ASIENTO = 8;
COMMIT;